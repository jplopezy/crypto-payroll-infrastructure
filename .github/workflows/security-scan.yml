name: Security Scanning

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'terraform/**'

jobs:
  code-security-scan:
    name: Code Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/owasp-top-ten
        continue-on-error: true

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          languages: javascript, python

  container-security-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t crypto-payroll-api:test .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'crypto-payroll-api:test'
          format: 'table'
        continue-on-error: true

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=Dockerfile --severity-threshold=high

  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --file=src/package.json
        continue-on-error: true

      - name: Run npm audit
        run: |
          if [ -f "src/package.json" ]; then
            cd src
            npm audit --audit-level=high
          else
            echo "No package.json found in src directory"
          fi

  infrastructure-security-scan:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: terraform
          format: table
        continue-on-error: true

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: terraform
          framework: terraform
          output_format: cli
        continue-on-error: true

      - name: Run Terrascan
        uses: accurics/terrascan-action@v1.18.0
        with:
          iac_type: terraform
          iac_version: v14
          policy_type: aws
          scan_path: terraform
          output_format: cli
        continue-on-error: true

  compliance-check:
    name: Compliance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Open Policy Agent (OPA) Conftest
        run: |
          # Install conftest
          wget https://github.com/open-policy-agent/conftest/releases/latest/download/conftest_linux_amd64.tar.gz
          tar xzf conftest_linux_amd64.tar.gz
          sudo mv conftest /usr/local/bin
          
          # Run conftest (skip if no policies directory exists)
          if [ -d "policies" ]; then
            conftest test terraform/ --output cli || true
          else
            echo "No policies directory found, skipping conftest"
          fi
        continue-on-error: true

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [code-security-scan, container-security-scan, dependency-scan, infrastructure-security-scan]
    if: always()
    
    steps:
      - name: Generate Security Report
        run: |
          echo "## Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Scan Type | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Code Security | ${{ needs.code-security-scan.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Container Security | ${{ needs.container-security-scan.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Scan | ${{ needs.dependency-scan.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Infrastructure Security | ${{ needs.infrastructure-security-scan.result }} |" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.code-security-scan.result }}" == "failure" || 
                "${{ needs.container-security-scan.result }}" == "failure" || 
                "${{ needs.dependency-scan.result }}" == "failure" || 
                "${{ needs.infrastructure-security-scan.result }}" == "failure" ]]; then
            echo "⚠️ Some security scans failed. Please review the results." >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "✅ All security scans passed successfully!" >> $GITHUB_STEP_SUMMARY
          fi
